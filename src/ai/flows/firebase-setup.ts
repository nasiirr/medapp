// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow for generating Firebase setup code in a Next.js app.
 *
 * - generateFirebaseSetupCode - A function that generates the Firebase setup code.
 * - GenerateFirebaseSetupCodeInput - The input type for the generateFirebaseSetupCode function.
 * - GenerateFirebaseSetupCodeOutput - The return type for the generateFirebaseSetupCode function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFirebaseSetupCodeInputSchema = z.object({
  apiKey: z.string().describe('The Firebase API key.'),
  authDomain: z.string().describe('The Firebase Auth domain.'),
  projectId: z.string().describe('The Firebase project ID.'),
  storageBucket: z.string().describe('The Firebase storage bucket.'),
  messagingSenderId: z.string().describe('The Firebase messaging sender ID.'),
  appId: z.string().describe('The Firebase app ID.'),
  measurementId: z.string().optional().describe('The Firebase measurement ID (optional).'),
});

export type GenerateFirebaseSetupCodeInput = z.infer<typeof GenerateFirebaseSetupCodeInputSchema>;

const GenerateFirebaseSetupCodeOutputSchema = z.object({
  setupCode: z.string().describe('The generated Firebase setup code for a Next.js app.'),
});

export type GenerateFirebaseSetupCodeOutput = z.infer<typeof GenerateFirebaseSetupCodeOutputSchema>;

export async function generateFirebaseSetupCode(input: GenerateFirebaseSetupCodeInput): Promise<GenerateFirebaseSetupCodeOutput> {
  return generateFirebaseSetupCodeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateFirebaseSetupCodePrompt',
  input: {schema: GenerateFirebaseSetupCodeInputSchema},
  output: {schema: GenerateFirebaseSetupCodeOutputSchema},
  prompt: `You are an expert in setting up Firebase in Next.js applications.
  Given the following Firebase configuration, generate the necessary code to initialize Firebase in a Next.js project.

  API Key: {{{apiKey}}}
  Auth Domain: {{{authDomain}}}
  Project ID: {{{projectId}}}
  Storage Bucket: {{{storageBucket}}}
  Messaging Sender ID: {{{messagingSenderId}}}
  App ID: {{{appId}}}
  Measurement ID (optional): {{{measurementId}}}

  Ensure the generated code follows best practices for Next.js and Firebase integration.
  The code should include the necessary imports from the firebase package and initialize Firebase with the provided configuration.
  It should also handle the case where measurementId is not provided.
  Provide complete and ready-to-use code block.
  The code should use Firebase v10 modular syntax.
  Make sure that the functions are imported from "firebase/app", "firebase/database", etc.
  Make sure to use getDatabase and similar functions from the Firebase SDK.
  Do not add comments to the code. If Firebase is already initialized, reuse the existing Firebase app instance.
  `, 
});

const generateFirebaseSetupCodeFlow = ai.defineFlow(
  {
    name: 'generateFirebaseSetupCodeFlow',
    inputSchema: GenerateFirebaseSetupCodeInputSchema,
    outputSchema: GenerateFirebaseSetupCodeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
